import org.gradle.internal.os.OperatingSystem

apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'

dependencies {
    compile "org.springframework.boot:spring-boot-devtools"
}

def profiles = 'dev'
if (project.hasProperty('no-liquibase')) {
    profiles += ',no-liquibase'
}
if (project.hasProperty('tls')) {
    profiles += ',tls'
}

bootRun {
    args = []
}

task webpackBuildDev(type: NpmTask, dependsOn: 'npm_install') {
    inputs.dir("./frontend/")
    inputs.files(fileTree('src/main/webapp/'))
    outputs.dir("build/www/")
    outputs.file("build/www/app/main.bundle.js")
    args = ["run-script", "build", "--prefix", "frontend/"]
}

war {
    webAppDirName = 'build/www/'
}

task copyIntoStatic (type: Copy) {
    from 'build/www/'
    into 'build/resources/main/static'
}

processResources {
    filesMatching('**/application.yml') {
        filter {
            it.replace('#project.version#', version)
        }
        filter {
            it.replace('#spring.profiles.active#', profiles)
        }
    }
}

task copyApp(type: Copy) {
  from 'frontend/dist/frontend/'
  into 'build/www/'
}

copyApp.dependsOn webpackBuildDev
processResources.dependsOn copyApp
copyIntoStatic.dependsOn processResources
bootJar.dependsOn copyIntoStatic

npm_install.onlyIf { shouldWebpackRun() == true }

def shouldWebpackRun() {
    project.hasProperty('webpack')
}
